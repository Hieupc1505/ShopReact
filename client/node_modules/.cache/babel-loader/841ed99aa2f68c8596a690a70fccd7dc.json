{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_AUTH_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_VERIFY, ACCESSTOKEN } from \"./typeAuth\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\nimport { useDispatch } from \"react-redux\";\nexport const userLogin = LoginFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/login`, LoginFormData);\n\n    if (data.success) {\n      localStorage.setItem(ACCESSTOKEN, data.accessToken);\n    } // await loadUser();\n\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        isLoad: false,\n        error: err.response.data.message || \"Login is fail\"\n      }\n    });\n  }\n};\nexport const userSignup = SignupFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/register`, SignupFormData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Auth/authAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_AUTH_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_VERIFY","ACCESSTOKEN","useEffect","axios","SERVER","setHeaderDefault","useDispatch","userLogin","LoginFormData","dispatch","type","data","post","success","localStorage","setItem","accessToken","err","payload","isLoad","error","response","message","userSignup","SignupFormData"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,cAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,WANJ,EAOIC,WAPJ,QAQO,YARP;AASA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,uCAAvB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,SAAS,GAAIC,aAAD,IAAmB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGA,UAAM;AAAEgB,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAClB,GAAER,MAAO,aADS,EAEnBI,aAFmB,CAAvB;;AAKA,QAAIG,IAAI,CAACE,OAAT,EAAkB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqBd,WAArB,EAAkCU,IAAI,CAACK,WAAvC;AACH,KAXD,CAaA;;;AAEAP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAIA,WAAOe,IAAP;AACH,GApBD,CAoBE,OAAOM,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,cADD;AAELqB,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAaV,IAAb,CAAkBW,OAAlB,IAA6B;AAF/B;AAFJ,KAAD,CAAR;AAOH;AACJ,CA9BM;AAgCP,OAAO,MAAMC,UAAU,GAAIC,cAAD,IAAoB,MAAOf,QAAP,IAAoB;AAC9D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAClB,GAAER,MAAO,gBADS,EAEnBoB,cAFmB,CAAvB;AAIAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH,GATD,CASE,OAAOkB,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,cADD;AAELqB,MAAAA,OAAO,EAAE;AACLE,QAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAaV,IAAb,CAAkBW;AADpB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAlBM","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_AUTH_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_VERIFY,\r\n    ACCESSTOKEN,\r\n} from \"./typeAuth\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\r\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const userLogin = (LoginFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/login`,\r\n            LoginFormData\r\n        );\r\n\r\n        if (data.success) {\r\n            localStorage.setItem(ACCESSTOKEN, data.accessToken);\r\n        }\r\n\r\n        // await loadUser();\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                isLoad: false,\r\n                error: err.response.data.message || \"Login is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const userSignup = (SignupFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/register`,\r\n            SignupFormData\r\n        );\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
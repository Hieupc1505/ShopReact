{"ast":null,"code":"const Authorization = ({\n  formName,\n  rules\n}) => {\n  const form = document.forms[formName];\n  let ruleState = {};\n\n  const validation = (ipForm, rule) => {\n    let ipVal = ipForm.value;\n    const ipErr = ipForm.nextElementSibling;\n    let errMess;\n    let rules = ruleState[rule.ele];\n    rules.forEach(test => {\n      console.log(test);\n      errMess = test(ipVal);\n\n      if (errMess) {\n        console.log(errMess);\n      }\n    });\n    const isValid = rule.test(ipVal);\n\n    if (isValid) {\n      ipErr.textContent = isValid;\n    }\n  };\n\n  if (form) {\n    rules.forEach(rule => {\n      const ipForm = form.querySelector(rule.ele);\n\n      if (ipForm) {\n        if (Array.isArray(ruleState[rule.ele])) {\n          ruleState[rule.ele].push(rule.test);\n        } else {\n          ruleState[rule.ele] = [rule.test];\n        }\n\n        validation(ipForm, rule);\n        ipForm.addEventListener(\"focus\", () => {\n          const ipErr = ipForm.nextElementSibling;\n          console.log(\"forcus\");\n          ipErr.textContent = \"\";\n        });\n      }\n    });\n  }\n\n  console.log(ruleState);\n};\n\n_c = Authorization;\n\nAuthorization.isRequired = function (select, mes) {\n  return {\n    ele: select,\n    test: function (val) {\n      return val.trim() ? null : mes || \"Filed is Required!!\";\n    }\n  };\n};\n\nAuthorization.minLength = function (select, min = 6, mes) {\n  return {\n    ele: select,\n    test: val => {\n      return val.lenght >= min ? null : mes || `Minximum of password is ${min} charactors`;\n    }\n  };\n};\n\nAuthorization.compare = function (select, tar) {\n  return {\n    ele: select,\n    test: function (val) {\n      const text = typeof tar === \"function\" ? tar() : tar;\n      return val === text ? null : \"Không khớp vui lòng kiểm tra lại\";\n    }\n  };\n};\n\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/Auth/Authorization.js"],"names":["Authorization","formName","rules","form","document","forms","ruleState","validation","ipForm","rule","ipVal","value","ipErr","nextElementSibling","errMess","ele","forEach","test","console","log","isValid","textContent","querySelector","Array","isArray","push","addEventListener","isRequired","select","mes","val","trim","minLength","min","lenght","compare","tar","text"],"mappings":"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","sourcesContent":["const Authorization = ({ formName, rules }) => {\r\n    const form = document.forms[formName];\r\n\r\n    let ruleState = {};\r\n\r\n    const validation = (ipForm, rule) => {\r\n        let ipVal = ipForm.value;\r\n        const ipErr = ipForm.nextElementSibling;\r\n        let errMess;\r\n\r\n        let rules = ruleState[rule.ele];\r\n\r\n        rules.forEach((test) => {\r\n            console.log(test);\r\n            errMess = test(ipVal);\r\n            if (errMess) {\r\n                console.log(errMess);\r\n            }\r\n        });\r\n\r\n        const isValid = rule.test(ipVal);\r\n        if (isValid) {\r\n            ipErr.textContent = isValid;\r\n        }\r\n    };\r\n\r\n    if (form) {\r\n        rules.forEach((rule) => {\r\n            const ipForm = form.querySelector(rule.ele);\r\n\r\n            if (ipForm) {\r\n                if (Array.isArray(ruleState[rule.ele])) {\r\n                    ruleState[rule.ele].push(rule.test);\r\n                } else {\r\n                    ruleState[rule.ele] = [rule.test];\r\n                }\r\n\r\n                validation(ipForm, rule);\r\n\r\n                ipForm.addEventListener(\"focus\", () => {\r\n                    const ipErr = ipForm.nextElementSibling;\r\n                    console.log(\"forcus\");\r\n                    ipErr.textContent = \"\";\r\n                });\r\n            }\r\n        });\r\n    }\r\n    console.log(ruleState);\r\n};\r\n\r\nAuthorization.isRequired = function (select, mes) {\r\n    return {\r\n        ele: select,\r\n        test: function (val) {\r\n            return val.trim() ? null : mes || \"Filed is Required!!\";\r\n        },\r\n    };\r\n};\r\n\r\nAuthorization.minLength = function (select, min = 6, mes) {\r\n    return {\r\n        ele: select,\r\n        test: (val) => {\r\n            return val.lenght >= min\r\n                ? null\r\n                : mes || `Minximum of password is ${min} charactors`;\r\n        },\r\n    };\r\n};\r\n\r\nAuthorization.compare = function (select, tar) {\r\n    return {\r\n        ele: select,\r\n        test: function (val) {\r\n            const text = typeof tar === \"function\" ? tar() : tar;\r\n            return val === text ? null : \"Không khớp vui lòng kiểm tra lại\";\r\n        },\r\n    };\r\n};\r\n\r\nexport default Authorization;\r\n"]},"metadata":{},"sourceType":"module"}
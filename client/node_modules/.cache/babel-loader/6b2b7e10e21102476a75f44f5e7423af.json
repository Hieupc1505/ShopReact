{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_CART_FAIL } from \"../Cart/typeCart\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, SINGLE_PRODUCT_REQUEST, SINGLE_PRODUCT_SUCCESS, SINGLE_PRODUCT_FAIL, CLEAR_ERROR, SERVER, PAGE_SEARCH_SUCCESS, PAGE_SEARCH_REQUEST, CLIENT_REQUEST, CLIENT_REQUEST_END, REQUEST_FAIL } from \"./typeProduct\";\naxios.defaults.withCredentials = true;\nexport const getCategory = () => async dispatch => {\n  dispatch({\n    type: CLIENT_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`${SERVER}/api/categories`).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response.data.message\n    }\n  }));\n  dispatch({\n    type: CLIENT_REQUEST_END\n  });\n  return data;\n};\nexport const pageSearch = query => async dispatch => {\n  try {\n    dispatch({\n      type: PAGE_SEARCH_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/page/search${query}`);\n    dispatch({\n      type: PAGE_SEARCH_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const searchProduct = name => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/search?q=${name}`);\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getAllProduct = (num = 12) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products?num=${num}`);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getProductById = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/${id}`);\n    dispatch({\n      type: SINGLE_PRODUCT_SUCCESS,\n      payload: {\n        isLoad: false,\n        pro: data.pro\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: SINGLE_PRODUCT_FAIL,\n      payload: err.response.data.message || \"Opps! Have a error\"\n    });\n  }\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const getProductByCategoryAndNum = (num = 10, type = \"saled\") => async dispatch => {\n  const {\n    data\n  } = await axios.get(`${SERVER}/api/slide?type=${type}&num=${num}`, {\n    withCredentials: true\n  }).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response.data.message\n    }\n  }));\n  return data;\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/ProductRedux/actionProduct.js"],"names":["axios","ALL_CART_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","SINGLE_PRODUCT_REQUEST","SINGLE_PRODUCT_SUCCESS","SINGLE_PRODUCT_FAIL","CLEAR_ERROR","SERVER","PAGE_SEARCH_SUCCESS","PAGE_SEARCH_REQUEST","CLIENT_REQUEST","CLIENT_REQUEST_END","REQUEST_FAIL","defaults","withCredentials","getCategory","dispatch","type","data","get","catch","err","payload","error","response","message","pageSearch","query","pros","searchProduct","name","getAllProduct","num","getProductById","id","isLoad","pro","clearError","getProductByCategoryAndNum"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { ALL_CART_FAIL } from \"../Cart/typeCart\";\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    SINGLE_PRODUCT_REQUEST,\r\n    SINGLE_PRODUCT_SUCCESS,\r\n    SINGLE_PRODUCT_FAIL,\r\n    CLEAR_ERROR,\r\n    SERVER,\r\n    PAGE_SEARCH_SUCCESS,\r\n    PAGE_SEARCH_REQUEST,\r\n    CLIENT_REQUEST,\r\n    CLIENT_REQUEST_END,\r\n    REQUEST_FAIL,\r\n} from \"./typeProduct\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const getCategory = () => async (dispatch) => {\r\n    dispatch({ type: CLIENT_REQUEST });\r\n    const { data } = await axios.get(`${SERVER}/api/categories`).catch((err) =>\r\n        dispatch({\r\n            type: REQUEST_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        })\r\n    );\r\n    dispatch({ type: CLIENT_REQUEST_END });\r\n    return data;\r\n};\r\n\r\nexport const pageSearch = (query) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PAGE_SEARCH_REQUEST });\r\n\r\n        const { data } = await axios.get(`${SERVER}/api/page/search${query}`);\r\n        dispatch({\r\n            type: PAGE_SEARCH_SUCCESS,\r\n            payload: {\r\n                pros: data.pros,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchProduct = (name) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${SERVER}/api/products/search?q=${name}`\r\n        );\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\nexport const getAllProduct =\r\n    (num = 12) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: ALL_PRODUCT_REQUEST,\r\n            });\r\n            const { data } = await axios.get(\r\n                `${SERVER}/api/products?num=${num}`\r\n            );\r\n            dispatch({\r\n                type: ALL_PRODUCT_SUCCESS,\r\n                payload: {\r\n                    pros: data.pros,\r\n                },\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: ALL_PRODUCT_FAIL,\r\n                payload: err.response.data.message,\r\n            });\r\n        }\r\n    };\r\nexport const getProductById = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SINGLE_PRODUCT_REQUEST });\r\n        const { data } = await axios.get(`${SERVER}/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_SUCCESS,\r\n            payload: {\r\n                isLoad: false,\r\n                pro: data.pro,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_FAIL,\r\n            payload: err.response.data.message || \"Opps! Have a error\",\r\n        });\r\n    }\r\n};\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\n\r\nexport const getProductByCategoryAndNum =\r\n    (num = 10, type = \"saled\") =>\r\n    async (dispatch) => {\r\n        const { data } = await axios\r\n            .get(`${SERVER}/api/slide?type=${type}&num=${num}`, {\r\n                withCredentials: true,\r\n            })\r\n            .catch((err) =>\r\n                dispatch({\r\n                    type: REQUEST_FAIL,\r\n                    payload: { error: err.response.data.message },\r\n                })\r\n            );\r\n        return data;\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}
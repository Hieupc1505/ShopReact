{"ast":null,"code":"import { ALL_CART_REQUEST, ALL_CART_SUCCESS, ALL_CART_FAIL, POST_CART, POST_CART_SUCCESS, ADD_TO_CART, SERVER } from \"./typeCart\";\nimport axios from \"axios\";\nexport const AllCartRequest = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_CART_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/cart`);\n    dispatch({\n      type: ALL_CART_SUCCESS,\n      payload: {\n        cart: data.cart\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.message || \"Get all cart is fail\"\n      }\n    });\n  }\n};\nexport const postCart = cartState => async dispatch => {\n  console.log(cartState);\n\n  try {\n    dispatch({\n      type: POST_CART\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/api/cart/add`, cartState);\n    dispatch({\n      type: POST_CART_SUCCESS,\n      payload: {\n        cart: data.cart\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.message || \"Get all cart is fail\"\n      }\n    });\n  }\n};\nexport const AddToCart = (pro, num) => async (dispatch, getState) => {\n  const data = getState(\"cartReducer\");\n  console.log(\"data\");\n\n  try {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        newItem: { ...pro,\n          num\n        }\n      }\n    });\n    await axios.post(`${SERVER}/api/cart/add`, { ...pro,\n      num\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Cart/actionCard.js"],"names":["ALL_CART_REQUEST","ALL_CART_SUCCESS","ALL_CART_FAIL","POST_CART","POST_CART_SUCCESS","ADD_TO_CART","SERVER","axios","AllCartRequest","dispatch","type","data","get","payload","cart","err","error","response","message","postCart","cartState","console","log","post","AddToCart","pro","num","getState","newItem"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,aAHJ,EAIIC,SAJJ,EAKIC,iBALJ,EAMIC,WANJ,EAOIC,MAPJ,QAQO,YARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEN,MAAO,WAApB,CAAvB;AAEAG,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,gBADD;AAELY,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEH,IAAI,CAACG;AADN;AAFJ,KAAD,CAAR;AAMH,GAZD,CAYE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,aADD;AAELW,MAAAA,OAAO,EAAE;AACLG,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,OAAlB,IAA6B;AAD/B;AAFJ,KAAD,CAAR;AAMH;AACJ,CArBM;AAsBP,OAAO,MAAMC,QAAQ,GAAIC,SAAD,IAAe,MAAOX,QAAP,IAAoB;AACvDY,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AACA,MAAI;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACgB,IAAN,CAAY,GAAEjB,MAAO,eAArB,EAAqCc,SAArC,CAAvB;AAEAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,iBADD;AAELS,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEH,IAAI,CAACG;AADN;AAFJ,KAAD,CAAR;AAMH,GAZD,CAYE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,aADD;AAELW,MAAAA,OAAO,EAAE;AACLG,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,OAAlB,IAA6B;AAD/B;AAFJ,KAAD,CAAR;AAMH;AACJ,CAtBM;AAwBP,OAAO,MAAMM,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc,OAAOjB,QAAP,EAAiBkB,QAAjB,KAA8B;AACjE,QAAMhB,IAAI,GAAGgB,QAAQ,CAAC,aAAD,CAArB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,MAAI;AACAb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,WADD;AAELQ,MAAAA,OAAO,EAAE;AACLe,QAAAA,OAAO,EAAE,EAAE,GAAGH,GAAL;AAAUC,UAAAA;AAAV;AADJ;AAFJ,KAAD,CAAR;AAMA,UAAMnB,KAAK,CAACgB,IAAN,CAAY,GAAEjB,MAAO,eAArB,EAAqC,EAAE,GAAGmB,GAAL;AAAUC,MAAAA;AAAV,KAArC,CAAN;AACH,GARD,CAQE,OAAOX,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,aADD;AAELW,MAAAA,OAAO,EAAE;AACLG,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO;AADpB;AAFJ,KAAD,CAAR;AAMH;AACJ,CAnBM","sourcesContent":["import {\r\n    ALL_CART_REQUEST,\r\n    ALL_CART_SUCCESS,\r\n    ALL_CART_FAIL,\r\n    POST_CART,\r\n    POST_CART_SUCCESS,\r\n    ADD_TO_CART,\r\n    SERVER,\r\n} from \"./typeCart\";\r\nimport axios from \"axios\";\r\n\r\nexport const AllCartRequest = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ALL_CART_REQUEST,\r\n        });\r\n        const { data } = await axios.get(`${SERVER}/api/cart`);\r\n\r\n        dispatch({\r\n            type: ALL_CART_SUCCESS,\r\n            payload: {\r\n                cart: data.cart,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.message || \"Get all cart is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\nexport const postCart = (cartState) => async (dispatch) => {\r\n    console.log(cartState);\r\n    try {\r\n        dispatch({\r\n            type: POST_CART,\r\n        });\r\n        const { data } = await axios.post(`${SERVER}/api/cart/add`, cartState);\r\n\r\n        dispatch({\r\n            type: POST_CART_SUCCESS,\r\n            payload: {\r\n                cart: data.cart,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.message || \"Get all cart is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const AddToCart = (pro, num) => async (dispatch, getState) => {\r\n    const data = getState(\"cartReducer\");\r\n    console.log(\"data\");\r\n    try {\r\n        dispatch({\r\n            type: ADD_TO_CART,\r\n            payload: {\r\n                newItem: { ...pro, num },\r\n            },\r\n        });\r\n        await axios.post(`${SERVER}/api/cart/add`, { ...pro, num });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
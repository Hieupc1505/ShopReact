{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_AUTH_FAIL, USER_SIGN_UP_REQUEST, USER_SIGN_UP_SUCCESS, USER_VERIFY, ACCESSTOKEN } from \"./typeAuth\";\nimport axios from \"axios\";\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\n\nconst loadUser = async dispatch => {\n  if (localStorage[ACCESSTOKEN]) {\n    setHeaderDefault(localStorage[ACCESSTOKEN]);\n  }\n\n  try {\n    const {\n      data\n    } = await axios.get(`${SERVER}/user/info`);\n\n    if (data.success) {\n      dispatch({\n        type: USER_VERIFY,\n        payload: {\n          isAuth: true,\n          user: data.user\n        }\n      });\n    }\n  } catch (err) {\n    localStorage.removeItem(ACCESSTOKEN);\n    setHeaderDefault(null);\n    dispatch({\n      type: USER_VERIFY,\n      //\n      payload: {\n        isAuth: false,\n        //\n        user: null\n      }\n    });\n  }\n};\n\nexport const userLogin = LoginFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/login`, LoginFormData);\n\n    if (data.success) {\n      localStorage.setItem(ACCESSTOKEN, data.accessToken);\n    }\n\n    await loadUser(dispatch);\n    dispatch({\n      type: USER_LOGIN_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message || \"Login is fail\"\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Auth/authAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_AUTH_FAIL","USER_SIGN_UP_REQUEST","USER_SIGN_UP_SUCCESS","USER_VERIFY","ACCESSTOKEN","axios","SERVER","setHeaderDefault","loadUser","dispatch","localStorage","data","get","success","type","payload","isAuth","user","err","removeItem","userLogin","LoginFormData","post","setItem","accessToken","error","response","message"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,cAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,WANJ,EAOIC,WAPJ,QAQO,YARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,uCAAvB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACjC,MAAIC,YAAY,CAACN,WAAD,CAAhB,EAA+B;AAC3BG,IAAAA,gBAAgB,CAACG,YAAY,CAACN,WAAD,CAAb,CAAhB;AACH;;AAED,MAAI;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAO,YAApB,CAAvB;;AAEA,QAAIK,IAAI,CAACE,OAAT,EAAkB;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,WADD;AAELY,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,IADH;AAELC,UAAAA,IAAI,EAAEN,IAAI,CAACM;AAFN;AAFJ,OAAD,CAAR;AAOH;AACJ,GAZD,CAYE,OAAOC,GAAP,EAAY;AACVR,IAAAA,YAAY,CAACS,UAAb,CAAwBf,WAAxB;AACAG,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX,WADD;AACc;AACnBY,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,KADH;AACU;AACfC,QAAAA,IAAI,EAAE;AAFD;AAFJ,KAAD,CAAR;AAOH;AACJ,CA5BD;;AA8BA,OAAO,MAAMG,SAAS,GAAIC,aAAD,IAAmB,MAAOZ,QAAP,IAAoB;AAC5D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACiB,IAAN,CAClB,GAAEhB,MAAO,aADS,EAEnBe,aAFmB,CAAvB;;AAKA,QAAIV,IAAI,CAACE,OAAT,EAAkB;AACdH,MAAAA,YAAY,CAACa,OAAb,CAAqBnB,WAArB,EAAkCO,IAAI,CAACa,WAAvC;AACH;;AAED,UAAMhB,QAAQ,CAACC,QAAD,CAAd;AAEAA,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH,GAlBD,CAkBE,OAAOmB,GAAP,EAAY;AACVT,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEd,cADD;AAELe,MAAAA,OAAO,EAAE;AACLU,QAAAA,KAAK,EAAEP,GAAG,CAACQ,QAAJ,CAAaf,IAAb,CAAkBgB,OAAlB,IAA6B;AAD/B;AAFJ,KAAD,CAAR;AAMH;AACJ,CA3BM","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_AUTH_FAIL,\r\n    USER_SIGN_UP_REQUEST,\r\n    USER_SIGN_UP_SUCCESS,\r\n    USER_VERIFY,\r\n    ACCESSTOKEN,\r\n} from \"./typeAuth\";\r\nimport axios from \"axios\";\r\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\r\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\r\n\r\nconst loadUser = async (dispatch) => {\r\n    if (localStorage[ACCESSTOKEN]) {\r\n        setHeaderDefault(localStorage[ACCESSTOKEN]);\r\n    }\r\n\r\n    try {\r\n        const { data } = await axios.get(`${SERVER}/user/info`);\r\n\r\n        if (data.success) {\r\n            dispatch({\r\n                type: USER_VERIFY,\r\n                payload: {\r\n                    isAuth: true,\r\n                    user: data.user,\r\n                },\r\n            });\r\n        }\r\n    } catch (err) {\r\n        localStorage.removeItem(ACCESSTOKEN);\r\n        setHeaderDefault(null);\r\n        dispatch({\r\n            type: USER_VERIFY, //\r\n            payload: {\r\n                isAuth: false, //\r\n                user: null,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const userLogin = (LoginFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/login`,\r\n            LoginFormData\r\n        );\r\n\r\n        if (data.success) {\r\n            localStorage.setItem(ACCESSTOKEN, data.accessToken);\r\n        }\r\n\r\n        await loadUser(dispatch);\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message || \"Login is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
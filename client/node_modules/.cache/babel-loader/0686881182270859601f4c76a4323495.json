{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\MainPages\\\\utils\\\\UploadImg\\\\UpImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./upImage.css\";\nimport { userContext } from \"../../../Context/userProvider\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { SERVER } from \"../../helpers/key\";\nimport { convertNum, covertNum } from \"../../helpers/handleNum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpImage = () => {\n  _s();\n\n  // const [fileInputSate, setFileInputState] = React.useState(\"\");\n  // const [selectedFile, setSelectedFile] = React.useState(\"\");\n  const {\n    api: {\n      getCategory\n    }\n  } = useContext(userContext);\n  const [images, setImages] = useState({\n    main: null,\n    imgArr: []\n  });\n  const {\n    main,\n    imgArr\n  } = images; // const [mainImg, setmainImg] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [formValue, setFormValue] = useState({\n    name: \"\",\n    prize: \"\",\n    promo: \"\",\n    status: \"\",\n    categoryId: \"\"\n  });\n  const [category, setCategory] = useState([]); // console.log(formValue);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await getCategory();\n\n        if (res.success) {\n          setCategory(res.categories);\n          setFormValue({ ...formValue,\n            categoryId: res.categories[0]._id\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n\n  const handleFileInputChange = async e => {\n    // if (images) deleteImage(images.public_id);\n    try {\n      const file = e.target.files;\n      let ins = file.length;\n      let formData = new FormData();\n\n      for (let x = 0; x < ins; x++) {\n        formData.append(\"files\", file[x]);\n      } // =================================///==================\n      // if (!file) return alert(\"File is not exist\");\n      // if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\n      // if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\n      //     return alert(\"File format is incorrect\");\n      // formData.append(\"file\", file);\n      // =========================================================\n\n\n      setLoading(true);\n      const res = await axios.post(`${SERVER}/service/upload`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      });\n      setLoading(false);\n      if (res.data.success) setImages({\n        main: res.data.imgs[0],\n        imgArr: res.data.imgs\n      });\n    } catch (err) {\n      console.log(err);\n    } // previewFile(file);\n\n  };\n\n  const deleteImage = async img => {\n    setLoading(true);\n    const res = await axios.post(`${SERVER}/service/destroy`, {\n      public_id: img.public_id\n    });\n    setLoading(false);\n    let newImgArr = [...imgArr];\n    newImgArr.forEach((item, index) => {\n      if (item.public_id === img.public_id) newImgArr.splice(index, 1);\n      return newImgArr;\n    });\n    console.log(newImgArr);\n    if (newImgArr.length > 0) setImages({\n      main: newImgArr[0],\n      imgArr: newImgArr\n    });else setImages({\n      main: null,\n      imgArr: []\n    }); // setImages({\n    //     main: null,\n    //     imgArr: imgArr.forEach( (item, index) => {\n    //         if( item.public_id === img.public_id ) imgArr.splice(0,1);\n    //         return imgArr;\n    //     }),\n    // });\n  };\n\n  const handleClickImg = item => {\n    setImages({ ...images,\n      main: item\n    });\n  };\n\n  const handleInput = e => {\n    const text = e.target.value;\n    setFormValue({ ...formValue,\n      [e.target.name]: text\n    });\n  };\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    const data = { ...formValue,\n      images: images\n    };\n    data = { ...data,\n      prize: convertNum(data.prize),\n      promo: covertNum(data.promo)\n    };\n    const res = await axios.post(`${SERVER}/api/products`, data);\n    console.log(res);\n  };\n\n  let imgStyle = images.imgArr.length ? {\n    display: \"block\"\n  } : {\n    display: \"none\"\n  }; // const handleSubmitFile = (e) => {\n  //     e.preventDefault();\n  //     if (!previewSource) return;\n  //     uploadImage(previewSource);\n  // };\n  // const uploadImage = async (base64EncodedImage) => {\n  //     console.log(base64EncodedImage);\n  //     try {\n  //         await axios('http://localhost:5000/api/upload', )\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upimg l-4 px-4 flex-fill\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group img-upload h-100 position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"img\",\n            className: imgArr.length ? \"d-none\" : `l-12\n                            w-100 h-100 border \n                            border-info d-flex \n                            justify-content-center \n                            align-items-center \n                            cursor-pointer`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus fs-1 text-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"d-none\",\n            type: \"file\",\n            multiple: true,\n            name: \"file\",\n            id: \"img\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: imgStyle,\n            src: imgArr.length ? main.url : \"\",\n            alt: \"choosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), main && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-times-circle img-close cursor-pointer text-danger\",\n            onClick: () => deleteImage(main)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-img d-flex justify-content-between mt-4\",\n            children: imgArr.length !== 0 && imgArr.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-img-item cursor-pointer\",\n              style: {\n                backgroundImage: `url('${item.url}')`\n              },\n              onClick: () => handleClickImg(item)\n            }, uuid4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrap l-8 ps-2 pe-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"form-products\",\n          className: \"form-products\",\n          onSubmit: handleSubmitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              value: formValue.name,\n              onChange: handleInput,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"prize\",\n              children: \"Product Prize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"prize\",\n              id: \"prize\",\n              value: formValue.prize,\n              onChange: handleInput,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"promo\",\n              children: \"Product Promotion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"promo\",\n              value: formValue.promo,\n              onChange: handleInput,\n              id: \"promo\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sel\",\n              children: \"Product Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"sel\",\n              onChange: handleInput,\n              value: formValue.categoryId,\n              name: \"categoryId\",\n              children: category.length && category.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item._id,\n                children: item.name\n              }, uuid4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100 mt-4\",\n            children: \"\\u0110\\u0103ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpImage, \"Kb7Za7PuyHSQCOUsvdonM54GxcU=\");\n\n_c = UpImage;\nexport default UpImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpImage\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/MainPages/utils/UploadImg/UpImage.js"],"names":["React","useState","useContext","useEffect","axios","userContext","v4","uuid4","SERVER","convertNum","covertNum","UpImage","api","getCategory","images","setImages","main","imgArr","loading","setLoading","formValue","setFormValue","name","prize","promo","status","categoryId","category","setCategory","res","success","categories","_id","err","console","log","handleFileInputChange","e","file","target","files","ins","length","formData","FormData","x","append","post","headers","data","imgs","deleteImage","img","public_id","newImgArr","forEach","item","index","splice","handleClickImg","handleInput","text","value","handleSubmitForm","preventDefault","imgStyle","display","url","map","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./upImage.css\";\r\nimport { userContext } from \"../../../Context/userProvider\";\r\nimport { v4 as uuid4 } from \"uuid\";\r\nimport { SERVER } from \"../../helpers/key\";\r\nimport { convertNum, covertNum } from \"../../helpers/handleNum\";\r\n\r\nconst UpImage = () => {\r\n    // const [fileInputSate, setFileInputState] = React.useState(\"\");\r\n    // const [selectedFile, setSelectedFile] = React.useState(\"\");\r\n\r\n    const {\r\n        api: { getCategory },\r\n    } = useContext(userContext);\r\n    const [images, setImages] = useState({\r\n        main: null,\r\n        imgArr: [],\r\n    });\r\n    const { main, imgArr } = images;\r\n    // const [mainImg, setmainImg] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [formValue, setFormValue] = useState({\r\n        name: \"\",\r\n        prize: \"\",\r\n        promo: \"\",\r\n        status: \"\",\r\n        categoryId: \"\",\r\n    });\r\n    const [category, setCategory] = useState([]);\r\n    // console.log(formValue);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const res = await getCategory();\r\n                if (res.success) {\r\n                    setCategory(res.categories);\r\n                    setFormValue({\r\n                        ...formValue,\r\n                        categoryId: res.categories[0]._id,\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleFileInputChange = async (e) => {\r\n        // if (images) deleteImage(images.public_id);\r\n\r\n        try {\r\n            const file = e.target.files;\r\n            let ins = file.length;\r\n            let formData = new FormData();\r\n\r\n            for (let x = 0; x < ins; x++) {\r\n                formData.append(\"files\", file[x]);\r\n            }\r\n            // =================================///==================\r\n            // if (!file) return alert(\"File is not exist\");\r\n            // if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\r\n            // if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\r\n            //     return alert(\"File format is incorrect\");\r\n            // formData.append(\"file\", file);\r\n            // =========================================================\r\n            setLoading(true);\r\n            const res = await axios.post(`${SERVER}/service/upload`, formData, {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n            });\r\n            setLoading(false);\r\n            if (res.data.success)\r\n                setImages({\r\n                    main: res.data.imgs[0],\r\n                    imgArr: res.data.imgs,\r\n                });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        // previewFile(file);\r\n    };\r\n\r\n    const deleteImage = async (img) => {\r\n        setLoading(true);\r\n        const res = await axios.post(`${SERVER}/service/destroy`, {\r\n            public_id: img.public_id,\r\n        });\r\n\r\n        setLoading(false);\r\n        let newImgArr = [...imgArr];\r\n        newImgArr.forEach((item, index) => {\r\n            if (item.public_id === img.public_id) newImgArr.splice(index, 1);\r\n            return newImgArr;\r\n        });\r\n        console.log(newImgArr);\r\n        if (newImgArr.length > 0)\r\n            setImages({\r\n                main: newImgArr[0],\r\n                imgArr: newImgArr,\r\n            });\r\n        else\r\n            setImages({\r\n                main: null,\r\n                imgArr: [],\r\n            });\r\n        // setImages({\r\n        //     main: null,\r\n        //     imgArr: imgArr.forEach( (item, index) => {\r\n        //         if( item.public_id === img.public_id ) imgArr.splice(0,1);\r\n        //         return imgArr;\r\n        //     }),\r\n        // });\r\n    };\r\n\r\n    const handleClickImg = (item) => {\r\n        setImages({ ...images, main: item });\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const text = e.target.value;\r\n        setFormValue({ ...formValue, [e.target.name]: text });\r\n    };\r\n\r\n    const handleSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        const data = { ...formValue, images: images };\r\n\r\n        data = {\r\n            ...data,\r\n            prize: convertNum(data.prize),\r\n            promo: covertNum(data.promo),\r\n        };\r\n\r\n        const res = await axios.post(`${SERVER}/api/products`, data);\r\n        console.log(res);\r\n    };\r\n\r\n    let imgStyle = images.imgArr.length\r\n        ? { display: \"block\" }\r\n        : { display: \"none\" };\r\n\r\n    // const handleSubmitFile = (e) => {\r\n    //     e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource);\r\n    // };\r\n\r\n    // const uploadImage = async (base64EncodedImage) => {\r\n    //     console.log(base64EncodedImage);\r\n    //     try {\r\n    //         await axios('http://localhost:5000/api/upload', )\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // };\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">Upload</h1>\r\n            <div className=\"main d-flex\">\r\n                <div className=\"upimg l-4 px-4 flex-fill\">\r\n                    <div className=\"form-group img-upload h-100 position-relative\">\r\n                        <label\r\n                            htmlFor=\"img\"\r\n                            className={\r\n                                imgArr.length\r\n                                    ? \"d-none\"\r\n                                    : `l-12\r\n                            w-100 h-100 border \r\n                            border-info d-flex \r\n                            justify-content-center \r\n                            align-items-center \r\n                            cursor-pointer`\r\n                            }\r\n                        >\r\n                            <i className=\"fas fa-plus fs-1 text-warning\"></i>\r\n                        </label>\r\n                        <input\r\n                            className=\"d-none\"\r\n                            type=\"file\"\r\n                            multiple\r\n                            name=\"file\"\r\n                            id=\"img\"\r\n                            onChange={handleFileInputChange}\r\n                        />\r\n                        <img\r\n                            style={imgStyle}\r\n                            src={imgArr.length ? main.url : \"\"}\r\n                            alt=\"choosen\"\r\n                        />\r\n\r\n                        {main && (\r\n                            <i\r\n                                className=\"far fa-times-circle img-close cursor-pointer text-danger\"\r\n                                onClick={() => deleteImage(main)}\r\n                            ></i>\r\n                        )}\r\n                        <div className=\"list-img d-flex justify-content-between mt-4\">\r\n                            {imgArr.length !== 0 &&\r\n                                imgArr.map((item) => (\r\n                                    <div\r\n                                        key={uuid4()}\r\n                                        className=\"list-img-item cursor-pointer\"\r\n                                        style={{\r\n                                            backgroundImage: `url('${item.url}')`,\r\n                                        }}\r\n                                        onClick={() => handleClickImg(item)}\r\n                                    ></div>\r\n                                ))}\r\n                            {/* <div className=\"list-img-item border\"></div>\r\n                            <div className=\"list-img-item border\"></div>\r\n                            <div className=\"list-img-item border\"></div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-wrap l-8 ps-2 pe-4\">\r\n                    <form\r\n                        name=\"form-products\"\r\n                        className=\"form-products\"\r\n                        onSubmit={handleSubmitForm}\r\n                    >\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"name\">Product Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                value={formValue.name}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"prize\">Product Prize</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"prize\"\r\n                                id=\"prize\"\r\n                                value={formValue.prize}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"promo\">Product Promotion</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"promo\"\r\n                                value={formValue.promo}\r\n                                onChange={handleInput}\r\n                                id=\"promo\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"status\">Product Status</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"status\"\r\n                                id=\"status\"\r\n                                value={formValue.status}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div> */}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"sel\">Product Category</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"sel\"\r\n                                onChange={handleInput}\r\n                                value={formValue.categoryId}\r\n                                name=\"categoryId\"\r\n                            >\r\n                                {category.length &&\r\n                                    category.map((item, index) => (\r\n                                        <option key={uuid4()} value={item._id}>\r\n                                            {item.name}\r\n                                        </option>\r\n                                    ))}\r\n                                {/* <option value=\"1\">Quần áo</option>\r\n                                <option value=\"2\">Giày dép</option>\r\n                                <option value=\"3\">Phụ kiện</option> */}\r\n                            </select>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary w-100 mt-4\"\r\n                        >\r\n                            Đăng\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpImage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_CART_FAIL } from \"../Cart/typeCart\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, SINGLE_PRODUCT_REQUEST, SINGLE_PRODUCT_SUCCESS, SINGLE_PRODUCT_FAIL, CLEAR_ERROR, SERVER, PAGE_SEARCH_SUCCESS, PAGE_SEARCH_REQUEST, CLIENT_REQUEST, CLIENT_REQUEST_END, REQUEST_FAIL } from \"./typeProduct\";\nexport const getSlideByType = type => async dispatch => {\n  dispatch({\n    type: CLIENT_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`${SERVER}/api/slide?type=${type}`).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response.data.message || \"get data for slide fail\"\n    }\n  }));\n  dispatch({\n    type: CLIENT_REQUEST_END\n  });\n  return data;\n};\nexport const getCategory = () => async dispatch => {\n  dispatch({\n    type: ALL_PRODUCT_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`${SERVER}/api/categories`).catch(err => dispatch({\n    type: ALL_PRODUCT_FAIL,\n    payload: {\n      error: err.response.data.message\n    }\n  }));\n  dispatch({\n    type: \"DEFAULT\"\n  });\n  return data;\n};\nexport const pageSearch = query => async dispatch => {\n  try {\n    dispatch({\n      type: PAGE_SEARCH_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/page/search${query}`);\n    dispatch({\n      type: PAGE_SEARCH_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const searchProduct = name => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/search?q=${name}`);\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getAllProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products`);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getProductById = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/${id}`);\n    dispatch({\n      type: SINGLE_PRODUCT_SUCCESS,\n      payload: {\n        isLoad: false,\n        pro: data.pro\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: SINGLE_PRODUCT_FAIL,\n      payload: err.response.data.message || \"Opps! Have a error\"\n    });\n  }\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/ProductRedux/actionProduct.js"],"names":["axios","ALL_CART_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","SINGLE_PRODUCT_REQUEST","SINGLE_PRODUCT_SUCCESS","SINGLE_PRODUCT_FAIL","CLEAR_ERROR","SERVER","PAGE_SEARCH_SUCCESS","PAGE_SEARCH_REQUEST","CLIENT_REQUEST","CLIENT_REQUEST_END","REQUEST_FAIL","getSlideByType","type","dispatch","data","get","catch","err","payload","error","response","message","getCategory","pageSearch","query","pros","searchProduct","name","getAllProduct","getProductById","id","isLoad","pro","clearError"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { ALL_CART_FAIL } from \"../Cart/typeCart\";\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    SINGLE_PRODUCT_REQUEST,\r\n    SINGLE_PRODUCT_SUCCESS,\r\n    SINGLE_PRODUCT_FAIL,\r\n    CLEAR_ERROR,\r\n    SERVER,\r\n    PAGE_SEARCH_SUCCESS,\r\n    PAGE_SEARCH_REQUEST,\r\n    CLIENT_REQUEST,\r\n    CLIENT_REQUEST_END,\r\n    REQUEST_FAIL,\r\n} from \"./typeProduct\";\r\n\r\nexport const getSlideByType = (type) => async (dispatch) => {\r\n    dispatch({ type: CLIENT_REQUEST });\r\n    const { data } = await axios\r\n        .get(`${SERVER}/api/slide?type=${type}`)\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: {\r\n                    error:\r\n                        err.response.data.message || \"get data for slide fail\",\r\n                },\r\n            })\r\n        );\r\n    dispatch({ type: CLIENT_REQUEST_END });\r\n    return data;\r\n};\r\n\r\nexport const getCategory = () => async (dispatch) => {\r\n    dispatch({ type: ALL_PRODUCT_REQUEST });\r\n    const { data } = await axios.get(`${SERVER}/api/categories`).catch((err) =>\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        })\r\n    );\r\n    dispatch({ type: \"DEFAULT\" });\r\n    return data;\r\n};\r\n\r\nexport const pageSearch = (query) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PAGE_SEARCH_REQUEST });\r\n\r\n        const { data } = await axios.get(`${SERVER}/api/page/search${query}`);\r\n        dispatch({\r\n            type: PAGE_SEARCH_SUCCESS,\r\n            payload: {\r\n                pros: data.pros,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchProduct = (name) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${SERVER}/api/products/search?q=${name}`\r\n        );\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getAllProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ALL_PRODUCT_REQUEST,\r\n        });\r\n        const { data } = await axios.get(`${SERVER}/api/products`);\r\n        dispatch({\r\n            type: ALL_PRODUCT_SUCCESS,\r\n            payload: {\r\n                pros: data.pros,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\nexport const getProductById = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SINGLE_PRODUCT_REQUEST });\r\n        const { data } = await axios.get(`${SERVER}/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_SUCCESS,\r\n            payload: {\r\n                isLoad: false,\r\n                pro: data.pro,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_FAIL,\r\n            payload: err.response.data.message || \"Opps! Have a error\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, SINGLE_PRODUCT_REQUEST, SINGLE_PRODUCT_SUCCESS, SINGLE_PRODUCT_FAIL, CLEAR_ERROR, SERVER, PAGE_SEARCH } from \"./typeProduct\";\nexport const pageSearch = query => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const data = await axios.get(`${SERVER}/api/page/search?${query}`);\n    dispatch({\n      type: PAGE_SEARCH\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const searchProduct = name => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/search?q=${name}`);\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getAllProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products`);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.message\n    });\n  }\n};\nexport const getProductById = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/products/${id}`);\n    dispatch({\n      type: SINGLE_PRODUCT_SUCCESS,\n      payload: {\n        isLoad: false,\n        pro: data.pro\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: SINGLE_PRODUCT_FAIL,\n      payload: err.response.data.message || \"Opps! Have a error\"\n    });\n  }\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/ProductRedux/actionProduct.js"],"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","SINGLE_PRODUCT_REQUEST","SINGLE_PRODUCT_SUCCESS","SINGLE_PRODUCT_FAIL","CLEAR_ERROR","SERVER","PAGE_SEARCH","pageSearch","query","dispatch","type","data","get","err","payload","response","message","searchProduct","name","getAllProduct","pros","getProductById","id","isLoad","pro","clearError"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    SINGLE_PRODUCT_REQUEST,\r\n    SINGLE_PRODUCT_SUCCESS,\r\n    SINGLE_PRODUCT_FAIL,\r\n    CLEAR_ERROR,\r\n    SERVER,\r\n    PAGE_SEARCH,\r\n} from \"./typeProduct\";\r\n\r\nexport const pageSearch = (query) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCT_REQUEST });\r\n\r\n        const data = await axios.get(`${SERVER}/api/page/search?${query}`);\r\n\r\n        dispatch({ type: PAGE_SEARCH });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchProduct = (name) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${SERVER}/api/products/search?q=${name}`\r\n        );\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getAllProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ALL_PRODUCT_REQUEST,\r\n        });\r\n        const { data } = await axios.get(`${SERVER}/api/products`);\r\n        dispatch({\r\n            type: ALL_PRODUCT_SUCCESS,\r\n            payload: {\r\n                pros: data.pros,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\nexport const getProductById = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SINGLE_PRODUCT_REQUEST });\r\n        const { data } = await axios.get(`${SERVER}/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_SUCCESS,\r\n            payload: {\r\n                isLoad: false,\r\n                pro: data.pro,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_FAIL,\r\n            payload: err.response.data.message || \"Opps! Have a error\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
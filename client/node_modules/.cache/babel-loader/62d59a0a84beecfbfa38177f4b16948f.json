{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\MainPages\\\\utils\\\\UploadImg\\\\UpImage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpImage = () => {\n  _s();\n\n  const [fileInputSate, setFileInputState] = React.useState(\"\");\n  const [selectedFile, setSelectedFile] = React.useState(\"\");\n  const [previewSource, setPreviewSource] = React.useState();\n\n  const handleFileInputChange = e => {\n    try {\n      const file = e.target.files[0];\n      console.log(file);\n      if (!file) return alert(\"File is not exist\");\n      if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\") return alert(\"File format is incorrect\");\n    } catch (err) {\n      console.log(err);\n    } // previewFile(file);\n\n  };\n\n  const handleSubmitFile = () => {}; // const previewFile = (file) => {\n  //     const reader = new FileReader();\n  //     reader.readAsDataURL(file);\n  //     reader.onloadend = () => {\n  //         setPreviewSource(reader.result);\n  //     };\n  // };\n  // const handleSubmitFile = (e) => {\n  //     e.preventDefault();\n  //     if (!previewSource) return;\n  //     uploadImage(previewSource);\n  // };\n  // const uploadImage = async (base64EncodedImage) => {\n  //     console.log(base64EncodedImage);\n  //     try {\n  //         await axios('http://localhost:5000/api/upload', )\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmitFile,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"img\",\n          children: \"Img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          value: fileInputSate,\n          onChange: handleFileInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"chosen\",\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpImage, \"/WxYthbIYu72CCmHyMdroE+3uF8=\");\n\n_c = UpImage;\nexport default UpImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpImage\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/MainPages/utils/UploadImg/UpImage.js"],"names":["React","axios","UpImage","fileInputSate","setFileInputState","useState","selectedFile","setSelectedFile","previewSource","setPreviewSource","handleFileInputChange","e","file","target","files","console","log","alert","size","type","err","handleSubmitFile","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,aAAD,EAAgBC,iBAAhB,IAAqCJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA3C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCT,KAAK,CAACK,QAAN,EAA1C;;AACA,QAAMK,qBAAqB,GAAIC,CAAD,IAAO;AACjC,QAAI;AACA,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAI,CAACA,IAAL,EAAW,OAAOK,KAAK,CAAC,mBAAD,CAAZ;AACX,UAAIL,IAAI,CAACM,IAAL,GAAY,OAAO,IAAvB,EAA6B,OAAOD,KAAK,CAAC,kBAAD,CAAZ;AAC7B,UAAIL,IAAI,CAACO,IAAL,KAAc,YAAd,IAA8BP,IAAI,CAACO,IAAL,KAAc,WAAhD,EACI,OAAOF,KAAK,CAAC,0BAAD,CAAZ;AACP,KAPD,CAOE,OAAOG,GAAP,EAAY;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAVgC,CAYjC;;AACH,GAbD;;AAcA,QAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC,CAlBkB,CAmBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEA,gBAAjC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAElB,aAHX;AAII,UAAA,QAAQ,EAAEO;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAgBKF,aAAa,iBACV;AACI,MAAA,GAAG,EAAEA,aADT;AAEI,MAAA,GAAG,EAAC,QAFR;AAGI,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B;AAHX;AAAA;AAAA;AAAA;AAAA,YAjBR;AAAA,kBADJ;AA0BH,CAlED;;GAAMrB,O;;KAAAA,O;AAoEN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UpImage = () => {\r\n    const [fileInputSate, setFileInputState] = React.useState(\"\");\r\n    const [selectedFile, setSelectedFile] = React.useState(\"\");\r\n    const [previewSource, setPreviewSource] = React.useState();\r\n    const handleFileInputChange = (e) => {\r\n        try {\r\n            const file = e.target.files[0];\r\n            console.log(file);\r\n            if (!file) return alert(\"File is not exist\");\r\n            if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\r\n            if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\r\n                return alert(\"File format is incorrect\");\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        // previewFile(file);\r\n    };\r\n    const handleSubmitFile = () => {};\r\n    // const previewFile = (file) => {\r\n    //     const reader = new FileReader();\r\n    //     reader.readAsDataURL(file);\r\n    //     reader.onloadend = () => {\r\n    //         setPreviewSource(reader.result);\r\n    //     };\r\n    // };\r\n    // const handleSubmitFile = (e) => {\r\n    //     e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource);\r\n    // };\r\n\r\n    // const uploadImage = async (base64EncodedImage) => {\r\n    //     console.log(base64EncodedImage);\r\n    //     try {\r\n    //         await axios('http://localhost:5000/api/upload', )\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // };\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">Upload</h1>\r\n            <form className=\"form\" onSubmit={handleSubmitFile}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"img\">Img</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        value={fileInputSate}\r\n                        onChange={handleFileInputChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            {previewSource && (\r\n                <img\r\n                    src={previewSource}\r\n                    alt=\"chosen\"\r\n                    style={{ height: \"300px\", width: \"300px\" }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpImage;\r\n"]},"metadata":{},"sourceType":"module"}
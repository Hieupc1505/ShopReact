{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\ProtectdRouteAdmin\\\\ProtectedRouteAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NotFound from \"../MainPages/utils/NotFound/NotFound\";\nimport { setHeaderDefault } from \"../MainPages/helpers/SetHeader\";\nimport { ACCESSTOKEN } from \"../../Redux/Auth/typeAuth\";\nimport { SERVER } from \"../MainPages/helpers/key\";\nimport { USER_VERIFY } from \"../../Redux/Auth/typeAuth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRouteAdmin = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.userAuth);\n  const dispatch = useDispatch();\n\n  const loadUser = async () => {\n    if (localStorage[ACCESSTOKEN]) {\n      setHeaderDefault(localStorage[ACCESSTOKEN]);\n    }\n\n    try {\n      const {\n        data\n      } = await axios.get(`${SERVER}/user/info`);\n\n      if (data.success) {\n        dispatch({\n          type: USER_VERIFY,\n          payload: {\n            isAuth: true,\n            user: data.user\n          }\n        });\n      }\n    } catch (err) {\n      localStorage.removeItem(ACCESSTOKEN);\n      setHeaderDefault(null);\n      dispatch({\n        type: USER_VERIFY,\n        //\n        payload: {\n          isAuth: false,\n          //\n          user: null\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const role = user ? user.role : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [role === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YOu are not Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this), role === 1 && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      component: Component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true); // if (user.role === 0) return <NotFound />;\n  // return (\n  //     <>\n  //         <Route {...props} component={Component} />\n  //     </>\n  // );\n};\n\n_s(ProtectedRouteAdmin, \"///vX1FZ9qMGkeDNJGCfk9B4ZjU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProtectedRouteAdmin;\nexport default ProtectedRouteAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRouteAdmin\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/ProtectdRouteAdmin/ProtectedRouteAdmin.js"],"names":["React","useEffect","Route","axios","NotFound","setHeaderDefault","ACCESSTOKEN","SERVER","USER_VERIFY","useDispatch","useSelector","ProtectedRouteAdmin","component","Component","rest","user","state","userAuth","dispatch","loadUser","localStorage","data","get","success","type","payload","isAuth","err","removeItem","role"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,QAAQ,GAAG,YAAY;AACzB,QAAIC,YAAY,CAACd,WAAD,CAAhB,EAA+B;AAC3BD,MAAAA,gBAAgB,CAACe,YAAY,CAACd,WAAD,CAAb,CAAhB;AACH;;AAED,QAAI;AACA,YAAM;AAAEe,QAAAA;AAAF,UAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEf,MAAO,YAApB,CAAvB;;AAEA,UAAIc,IAAI,CAACE,OAAT,EAAkB;AACdL,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEhB,WADD;AAELiB,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE,IADH;AAELX,YAAAA,IAAI,EAAEM,IAAI,CAACN;AAFN;AAFJ,SAAD,CAAR;AAOH;AACJ,KAZD,CAYE,OAAOY,GAAP,EAAY;AACVP,MAAAA,YAAY,CAACQ,UAAb,CAAwBtB,WAAxB;AACAD,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAa,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEhB,WADD;AACc;AACnBiB,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,KADH;AACU;AACfX,UAAAA,IAAI,EAAE;AAFD;AAFJ,OAAD,CAAR;AAOH;AACJ,GA5BD;;AA8BAd,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMU,IAAI,GAAGd,IAAI,GAAGA,IAAI,CAACc,IAAR,GAAe,CAAhC;AACA,sBACI;AAAA,eACKA,IAAI,KAAK,CAAT,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKA,IAAI,KAAK,CAAT,iBAAc,QAAC,KAAD,OAAWf,IAAX;AAAiB,MAAA,SAAS,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFnB;AAAA,kBADJ,CAxC+D,CA8C/D;AAEA;AACA;AACA;AACA;AACA;AACH,CArDD;;GAAMF,mB;UACeD,W,EAEAD,W;;;KAHfE,mB;AAuDN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport NotFound from \"../MainPages/utils/NotFound/NotFound\";\r\nimport { setHeaderDefault } from \"../MainPages/helpers/SetHeader\";\r\nimport { ACCESSTOKEN } from \"../../Redux/Auth/typeAuth\";\r\nimport { SERVER } from \"../MainPages/helpers/key\";\r\nimport { USER_VERIFY } from \"../../Redux/Auth/typeAuth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRouteAdmin = ({ component: Component, ...rest }) => {\r\n    const { user } = useSelector((state) => state.userAuth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const loadUser = async () => {\r\n        if (localStorage[ACCESSTOKEN]) {\r\n            setHeaderDefault(localStorage[ACCESSTOKEN]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.get(`${SERVER}/user/info`);\r\n\r\n            if (data.success) {\r\n                dispatch({\r\n                    type: USER_VERIFY,\r\n                    payload: {\r\n                        isAuth: true,\r\n                        user: data.user,\r\n                    },\r\n                });\r\n            }\r\n        } catch (err) {\r\n            localStorage.removeItem(ACCESSTOKEN);\r\n            setHeaderDefault(null);\r\n            dispatch({\r\n                type: USER_VERIFY, //\r\n                payload: {\r\n                    isAuth: false, //\r\n                    user: null,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUser();\r\n    }, []);\r\n\r\n    const role = user ? user.role : 0;\r\n    return (\r\n        <>\r\n            {role === 0 && <h1>YOu are not Admin</h1>}\r\n            {role === 1 && <Route {...rest} component={Component} />}\r\n        </>\r\n    );\r\n    // if (user.role === 0) return <NotFound />;\r\n\r\n    // return (\r\n    //     <>\r\n    //         <Route {...props} component={Component} />\r\n    //     </>\r\n    // );\r\n};\r\n\r\nexport default ProtectedRouteAdmin;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_AUTH_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, ACCESSTOKEN, USER_LOGOUT } from \"./typeAuth\";\nimport axios from \"axios\";\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\nexport const userLogin = LoginFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/login`, LoginFormData);\n\n    if (data.success) {\n      localStorage.setItem(ACCESSTOKEN, data.accessToken);\n    } // await loadUser();\n\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        isLoad: false,\n        error: err.response.data.message || \"Login is fail\"\n      }\n    });\n  }\n};\nexport const userRegister = RegisterFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/register`, RegisterFormData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const userLogout = () => async dispatch => {\n  localStorage.removeItem(ACCESSTOKEN);\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Auth/authAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_AUTH_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","ACCESSTOKEN","USER_LOGOUT","axios","SERVER","userLogin","LoginFormData","dispatch","type","data","post","success","localStorage","setItem","accessToken","err","payload","isLoad","error","response","message","userRegister","RegisterFormData","userLogout","removeItem"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,cAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,WANJ,EAOIC,WAPJ,QAQO,YARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,uCAAvB;AAEA,OAAO,MAAMC,SAAS,GAAIC,aAAD,IAAmB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,IAAN,CAClB,GAAEN,MAAO,aADS,EAEnBE,aAFmB,CAAvB;;AAKA,QAAIG,IAAI,CAACE,OAAT,EAAkB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqBZ,WAArB,EAAkCQ,IAAI,CAACK,WAAvC;AACH,KAXD,CAaA;;;AAEAP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAIA,WAAOY,IAAP;AACH,GApBD,CAoBE,OAAOM,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,cADD;AAELkB,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAaV,IAAb,CAAkBW,OAAlB,IAA6B;AAF/B;AAFJ,KAAD,CAAR;AAOH;AACJ,CA9BM;AAgCP,OAAO,MAAMC,YAAY,GAAIC,gBAAD,IAAsB,MAAOf,QAAP,IAAoB;AAClE,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,IAAN,CAClB,GAAEN,MAAO,gBADS,EAEnBkB,gBAFmB,CAAvB;AAIAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;AAIA,WAAOS,IAAP;AACH,GAXD,CAWE,OAAOM,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,cADD;AAELkB,MAAAA,OAAO,EAAE;AACLE,QAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAaV,IAAb,CAAkBW;AADpB;AAFJ,KAAD,CAAR;AAMH;AACJ,CApBM;AAqBP,OAAO,MAAMG,UAAU,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AAChDK,EAAAA,YAAY,CAACY,UAAb,CAAwBvB,WAAxB;AACAM,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACH,CAHM","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_AUTH_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    ACCESSTOKEN,\r\n    USER_LOGOUT,\r\n} from \"./typeAuth\";\r\nimport axios from \"axios\";\r\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\r\n\r\nexport const userLogin = (LoginFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/login`,\r\n            LoginFormData\r\n        );\r\n\r\n        if (data.success) {\r\n            localStorage.setItem(ACCESSTOKEN, data.accessToken);\r\n        }\r\n\r\n        // await loadUser();\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                isLoad: false,\r\n                error: err.response.data.message || \"Login is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const userRegister = (RegisterFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/register`,\r\n            RegisterFormData\r\n        );\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem(ACCESSTOKEN);\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
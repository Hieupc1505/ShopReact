{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_AUTH_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, ACCESSTOKEN, USER_LOGOUT, USER_UPLOAD_PROFILE, USER_UPLOAD_REQUEST, CLEAR_ERROR, USER_VERIFY } from \"./typeAuth\";\nimport axios from \"axios\";\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const userLogin = LoginFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/login`, LoginFormData);\n\n    if (data.success) {\n      localStorage.setItem(ACCESSTOKEN, data.accessToken);\n    } // await loadUser();\n\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message || \"Login is fail\"\n      }\n    });\n  }\n};\nexport const userRegister = RegisterFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/register`, RegisterFormData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const userLogout = () => async dispatch => {\n  dispatch({\n    type: USER_LOGIN_REQUEST\n  });\n  localStorage.removeItem(ACCESSTOKEN);\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const sendProfileForm = userInfo => async dispatch => {\n  try {\n    dispatch({\n      type: USER_UPLOAD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/save/profile`, userInfo);\n    dispatch({\n      type: USER_UPLOAD_PROFILE,\n      payload: {\n        user: data.newUser\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const AuthUser = () => async dispatch => {\n  if (localStorage[ACCESSTOKEN]) {\n    setHeaderDefault(localStorage[ACCESSTOKEN]);\n  }\n\n  try {\n    const {\n      data\n    } = await axios.get(`${SERVER}/user/info`);\n\n    if (data.success) {\n      dispatch({\n        type: USER_VERIFY,\n        payload: {\n          isAuth: true,\n          user: data.user\n        }\n      });\n    }\n  } catch (err) {\n    localStorage.removeItem(ACCESSTOKEN);\n    setHeaderDefault(null);\n    dispatch({\n      type: USER_VERIFY,\n      //\n      payload: {\n        isAuth: false,\n        //\n        user: null\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Auth/authAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_AUTH_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","ACCESSTOKEN","USER_LOGOUT","USER_UPLOAD_PROFILE","USER_UPLOAD_REQUEST","CLEAR_ERROR","USER_VERIFY","axios","SERVER","setHeaderDefault","clearError","dispatch","type","userLogin","LoginFormData","data","post","success","localStorage","setItem","accessToken","err","payload","error","response","message","userRegister","RegisterFormData","userLogout","removeItem","sendProfileForm","userInfo","user","newUser","AuthUser","get","isAuth"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_AUTH_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    ACCESSTOKEN,\r\n    USER_LOGOUT,\r\n    USER_UPLOAD_PROFILE,\r\n    USER_UPLOAD_REQUEST,\r\n    CLEAR_ERROR,\r\n    USER_VERIFY,\r\n} from \"./typeAuth\";\r\nimport axios from \"axios\";\r\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\r\nimport setHeaderDefault from \"../../component/MainPages/helpers/SetHeader\";\r\n\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\n\r\nexport const userLogin = (LoginFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/login`,\r\n            LoginFormData\r\n        );\r\n\r\n        if (data.success) {\r\n            localStorage.setItem(ACCESSTOKEN, data.accessToken);\r\n        }\r\n\r\n        // await loadUser();\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message || \"Login is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const userRegister = (RegisterFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/register`,\r\n            RegisterFormData\r\n        );\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    localStorage.removeItem(ACCESSTOKEN);\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\nexport const sendProfileForm = (userInfo) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPLOAD_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/save/profile`,\r\n            userInfo\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_UPLOAD_PROFILE,\r\n            payload: {\r\n                user: data.newUser,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const AuthUser = () => async (dispatch) => {\r\n    if (localStorage[ACCESSTOKEN]) {\r\n        setHeaderDefault(localStorage[ACCESSTOKEN]);\r\n    }\r\n\r\n    try {\r\n        const { data } = await axios.get(`${SERVER}/user/info`);\r\n\r\n        if (data.success) {\r\n            dispatch({\r\n                type: USER_VERIFY,\r\n                payload: {\r\n                    isAuth: true,\r\n                    user: data.user,\r\n                },\r\n            });\r\n        }\r\n    } catch (err) {\r\n        localStorage.removeItem(ACCESSTOKEN);\r\n        setHeaderDefault(null);\r\n        dispatch({\r\n            type: USER_VERIFY, //\r\n            payload: {\r\n                isAuth: false, //\r\n                user: null,\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, SINGLE_PRODUCT_REQUEST, SINGLE_PRODUCT_SUCCESS, SINGLE_PRODUCT_FAIL, CLEAR_ERROR, SERVER, PAGE_SEARCH_SUCCESS, PAGE_SEARCH_REQUEST, CLIENT_REQUEST, CLIENT_REQUEST_END, REQUEST_FAIL } from \"./typeProduct\";\nexport const getProsByCateId = categoryId => async dispatch => {\n  dispatch({\n    type: CLIENT_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`/api/getpros/${categoryId}`).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response.data.msg\n    }\n  }));\n};\nexport const getCategory = () => async dispatch => {\n  dispatch({\n    type: CLIENT_REQUEST\n  });\n  const {\n    data\n  } = await axios.get(`/api/categories`).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response.data.msg\n    }\n  }));\n  dispatch({\n    type: CLIENT_REQUEST_END\n  });\n  return data;\n};\nexport const pageSearch = query => async dispatch => {\n  try {\n    dispatch({\n      type: PAGE_SEARCH_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/page/search${query}`);\n    dispatch({\n      type: CLIENT_REQUEST_END\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const searchProduct = name => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/search?q=${name}`);\n    return data;\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response.data.msg\n    });\n  }\n};\nexport const getAllProduct = (num = 12) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products?num=${num}`);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: {\n        pros: data.pros\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: err.response ? err.response.data.msg : \"Internal server error\"\n    });\n  }\n};\nexport const getProductById = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: SINGLE_PRODUCT_SUCCESS,\n      payload: {\n        isLoad: false,\n        pro: data.pro\n      }\n    });\n  } catch (err) {\n    console.log(err.response);\n    dispatch({\n      type: SINGLE_PRODUCT_FAIL,\n      payload: err.response ? err.response.data.msg : \"Opps! Have a error\"\n    });\n  }\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const getProductByCategoryAndNum = (num = 10, type = \"saled\") => async dispatch => {\n  const {\n    data\n  } = await axios.get(`/api/slide?type=${type}&num=${num}`).catch(err => dispatch({\n    type: REQUEST_FAIL,\n    payload: {\n      error: err.response ? err.response.data.msg : \"get product by number fail\"\n    }\n  }));\n  return data;\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/ProductRedux/actionProduct.js"],"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","SINGLE_PRODUCT_REQUEST","SINGLE_PRODUCT_SUCCESS","SINGLE_PRODUCT_FAIL","CLEAR_ERROR","SERVER","PAGE_SEARCH_SUCCESS","PAGE_SEARCH_REQUEST","CLIENT_REQUEST","CLIENT_REQUEST_END","REQUEST_FAIL","getProsByCateId","categoryId","dispatch","type","data","get","catch","err","payload","error","response","msg","getCategory","pageSearch","query","searchProduct","name","getAllProduct","num","pros","getProductById","id","isLoad","pro","console","log","clearError","getProductByCategoryAndNum"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    SINGLE_PRODUCT_REQUEST,\r\n    SINGLE_PRODUCT_SUCCESS,\r\n    SINGLE_PRODUCT_FAIL,\r\n    CLEAR_ERROR,\r\n    SERVER,\r\n    PAGE_SEARCH_SUCCESS,\r\n    PAGE_SEARCH_REQUEST,\r\n    CLIENT_REQUEST,\r\n    CLIENT_REQUEST_END,\r\n    REQUEST_FAIL,\r\n} from \"./typeProduct\";\r\n\r\nexport const getProsByCateId = (categoryId) => async (dispatch) => {\r\n    dispatch({ type: CLIENT_REQUEST });\r\n    const { data } = await axios\r\n        .get(`/api/getpros/${categoryId}`)\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: REQUEST_FAIL,\r\n                payload: {\r\n                    error: err.response.data.msg,\r\n                },\r\n            })\r\n        );\r\n};\r\n\r\nexport const getCategory = () => async (dispatch) => {\r\n    dispatch({ type: CLIENT_REQUEST });\r\n    const { data } = await axios.get(`/api/categories`).catch((err) =>\r\n        dispatch({\r\n            type: REQUEST_FAIL,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        })\r\n    );\r\n    dispatch({ type: CLIENT_REQUEST_END });\r\n    return data;\r\n};\r\n\r\nexport const pageSearch = (query) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PAGE_SEARCH_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/page/search${query}`);\r\n        dispatch({\r\n            type: CLIENT_REQUEST_END,\r\n        });\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: {\r\n                error: err.response.data.msg,\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchProduct = (name) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/products/search?q=${name}`);\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: err.response.data.msg,\r\n        });\r\n    }\r\n};\r\nexport const getAllProduct =\r\n    (num = 12) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: ALL_PRODUCT_REQUEST,\r\n            });\r\n            const { data } = await axios.get(`/api/products?num=${num}`);\r\n            dispatch({\r\n                type: ALL_PRODUCT_SUCCESS,\r\n                payload: {\r\n                    pros: data.pros,\r\n                },\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: ALL_PRODUCT_FAIL,\r\n                payload: err.response\r\n                    ? err.response.data.msg\r\n                    : \"Internal server error\",\r\n            });\r\n        }\r\n    };\r\nexport const getProductById = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SINGLE_PRODUCT_REQUEST });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_SUCCESS,\r\n            payload: {\r\n                isLoad: false,\r\n                pro: data.pro,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        dispatch({\r\n            type: SINGLE_PRODUCT_FAIL,\r\n            payload: err.response\r\n                ? err.response.data.msg\r\n                : \"Opps! Have a error\",\r\n        });\r\n    }\r\n};\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\nexport const getProductByCategoryAndNum =\r\n    (num = 10, type = \"saled\") =>\r\n    async (dispatch) => {\r\n        const { data } = await axios\r\n            .get(`/api/slide?type=${type}&num=${num}`)\r\n            .catch((err) =>\r\n                dispatch({\r\n                    type: REQUEST_FAIL,\r\n                    payload: {\r\n                        error: err.response\r\n                            ? err.response.data.msg\r\n                            : \"get product by number fail\",\r\n                    },\r\n                })\r\n            );\r\n        return data;\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}
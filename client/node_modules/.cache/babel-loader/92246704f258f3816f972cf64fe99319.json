{"ast":null,"code":"import { ALL_CART_REQUEST, ALL_CART_SUCCESS, ALL_CART_FAIL, POST_CART, POST_CART_SUCCESS, ADD_TO_CART, SERVER, DELETE_FROM_CART, ORDER_REQUEST, ORDER_REQUEST_SUCCESS } from \"./typeCart\";\nimport axios from \"axios\";\nexport const OrderPost = dataForm => async dispatch => {\n  dispatch({\n    type: ORDER_REQUEST\n  });\n  const {\n    data\n  } = await axios.post(`${SERVER}/api/order`, dataForm);\n  if (data.success) dispatch({\n    type: ORDER_REQUEST_SUCCESS,\n    payload: {\n      orders: data.user.orders\n    }\n  });\n};\nexport const AllCartRequest = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_CART_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`${SERVER}/api/cart`); // console.log(data);\n\n    dispatch({\n      type: ALL_CART_SUCCESS,\n      payload: {\n        cart: data.cart\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.msg || \"Get all cart is fail\"\n      }\n    });\n  }\n};\nexport const postCart = cartState => async dispatch => {\n  try {\n    dispatch({\n      type: POST_CART\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/api/cart/add`, cartState);\n    dispatch({\n      type: POST_CART_SUCCESS,\n      payload: {\n        cart: data.cart\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.msg || \"Get all cart is fail\"\n      }\n    });\n  }\n};\nexport const AddToCart = (pro, num) => async (dispatch, getState) => {\n  const {\n    _id\n  } = pro;\n  const state = getState();\n  const {\n    cart\n  } = state.cartReducer;\n  const isCheck = cart.some(item => item._id === _id);\n\n  if (isCheck) {\n    alert(\"Sản phẩm đã có trong giỏ\");\n    return;\n  } else {\n    try {\n      dispatch({\n        type: ADD_TO_CART,\n        payload: {\n          newItem: {\n            num,\n            ...pro\n          }\n        }\n      });\n      await axios.post(`${SERVER}/api/cart/add`, [{ ...pro,\n        num\n      }, ...cart]);\n    } catch (err) {\n      dispatch({\n        type: ALL_CART_FAIL,\n        payload: {\n          error: err.response.data.msg || \"Post cart fail\"\n        }\n      });\n    }\n  } // const { cart } = state.cartReducer;\n\n};\nexport const SingleDeleteCart = numId => async (dispatch, getState) => {\n  const state = getState();\n  const {\n    cart\n  } = state.cartReducer;\n  cart.forEach((item, index) => {\n    if (item._id === numId) cart.splice(index, 1);\n  });\n\n  try {\n    dispatch({\n      type: POST_CART\n    });\n    await axios.post(`${SERVER}/api/cart/add`, cart);\n    dispatch({\n      type: DELETE_FROM_CART,\n      payload: {\n        cart: cart\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: ALL_CART_FAIL,\n      payload: {\n        error: err.response.data.msg || \"Remove product fail\"\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Cart/actionCard.js"],"names":["ALL_CART_REQUEST","ALL_CART_SUCCESS","ALL_CART_FAIL","POST_CART","POST_CART_SUCCESS","ADD_TO_CART","SERVER","DELETE_FROM_CART","ORDER_REQUEST","ORDER_REQUEST_SUCCESS","axios","OrderPost","dataForm","dispatch","type","data","post","success","payload","orders","user","AllCartRequest","get","cart","err","error","response","msg","postCart","cartState","AddToCart","pro","num","getState","_id","state","cartReducer","isCheck","some","item","alert","newItem","SingleDeleteCart","numId","forEach","index","splice"],"mappings":"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","sourcesContent":["import {\r\n    ALL_CART_REQUEST,\r\n    ALL_CART_SUCCESS,\r\n    ALL_CART_FAIL,\r\n    POST_CART,\r\n    POST_CART_SUCCESS,\r\n    ADD_TO_CART,\r\n    SERVER,\r\n    DELETE_FROM_CART,\r\n    ORDER_REQUEST,\r\n    ORDER_REQUEST_SUCCESS,\r\n} from \"./typeCart\";\r\nimport axios from \"axios\";\r\n\r\nexport const OrderPost = (dataForm) => async (dispatch) => {\r\n    dispatch({ type: ORDER_REQUEST });\r\n    const { data } = await axios.post(`${SERVER}/api/order`, dataForm);\r\n    if (data.success)\r\n        dispatch({\r\n            type: ORDER_REQUEST_SUCCESS,\r\n            payload: {\r\n                orders: data.user.orders,\r\n            },\r\n        });\r\n};\r\n\r\nexport const AllCartRequest = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ALL_CART_REQUEST,\r\n        });\r\n        const { data } = await axios.get(`${SERVER}/api/cart`);\r\n        // console.log(data);\r\n        dispatch({\r\n            type: ALL_CART_SUCCESS,\r\n            payload: {\r\n                cart: data.cart,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.msg || \"Get all cart is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const postCart = (cartState) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_CART,\r\n        });\r\n        const { data } = await axios.post(`${SERVER}/api/cart/add`, cartState);\r\n\r\n        dispatch({\r\n            type: POST_CART_SUCCESS,\r\n            payload: {\r\n                cart: data.cart,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.msg || \"Get all cart is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const AddToCart = (pro, num) => async (dispatch, getState) => {\r\n    const { _id } = pro;\r\n    const state = getState();\r\n    const { cart } = state.cartReducer;\r\n    const isCheck = cart.some((item) => item._id === _id);\r\n\r\n    if (isCheck) {\r\n        alert(\"Sản phẩm đã có trong giỏ\");\r\n        return;\r\n    } else {\r\n        try {\r\n            dispatch({\r\n                type: ADD_TO_CART,\r\n                payload: {\r\n                    newItem: { num, ...pro },\r\n                },\r\n            });\r\n            await axios.post(`${SERVER}/api/cart/add`, [\r\n                { ...pro, num },\r\n                ...cart,\r\n            ]);\r\n        } catch (err) {\r\n            dispatch({\r\n                type: ALL_CART_FAIL,\r\n                payload: {\r\n                    error: err.response.data.msg || \"Post cart fail\",\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    // const { cart } = state.cartReducer;\r\n};\r\n\r\nexport const SingleDeleteCart = (numId) => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const { cart } = state.cartReducer;\r\n\r\n    cart.forEach((item, index) => {\r\n        if (item._id === numId) cart.splice(index, 1);\r\n    });\r\n\r\n    try {\r\n        dispatch({\r\n            type: POST_CART,\r\n        });\r\n\r\n        await axios.post(`${SERVER}/api/cart/add`, cart);\r\n\r\n        dispatch({\r\n            type: DELETE_FROM_CART,\r\n            payload: {\r\n                cart: cart,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ALL_CART_FAIL,\r\n            payload: {\r\n                error: err.response.data.msg || \"Remove product fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
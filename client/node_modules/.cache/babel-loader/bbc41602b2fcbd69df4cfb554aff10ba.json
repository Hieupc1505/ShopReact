{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_AUTH_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, ACCESSTOKEN, USER_LOGOUT, USER_UPLOAD_PROFILE, USER_UPLOAD_REQUEST, CLEAR_ERROR, USER_REQUEST, USER_VERIFY, REQUEST_FAIL } from \"./typeAuth\";\nimport axios from \"axios\";\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\nexport const updateProfile = formUpdateData => async dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  const {\n    data\n  } = await axios.post(`${SERVER}/user/upload?_method=put`, formUpdateData).catch(err => dispatch({\n    type: USER_AUTH_FAIL,\n    payload: {\n      error: err.response.data.message || \"Update your profile fail!!\"\n    }\n  }));\n  console.log(data);\n  dispatch({\n    type: USER_UPLOAD_PROFILE,\n    payload: {\n      user: data.user\n    }\n  });\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERROR\n  });\n};\nexport const userLogin = LoginFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/login`, LoginFormData);\n\n    if (data.success) {\n      localStorage.setItem(ACCESSTOKEN, data.accessToken);\n    } // await loadUser();\n\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message || \"Login is fail\"\n      }\n    });\n  }\n};\nexport const userRegister = RegisterFormData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/register`, RegisterFormData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS\n    });\n    return data;\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};\nexport const userLogout = () => async dispatch => {\n  dispatch({\n    type: USER_LOGIN_REQUEST\n  });\n  localStorage.removeItem(ACCESSTOKEN);\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const sendProfileForm = userInfo => async dispatch => {\n  try {\n    dispatch({\n      type: USER_UPLOAD_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`${SERVER}/user/save/profile`, userInfo);\n    dispatch({\n      type: USER_UPLOAD_PROFILE,\n      payload: {\n        user: data.newUser\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_AUTH_FAIL,\n      payload: {\n        error: err.response.data.message\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/Redux/Auth/authAction.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_AUTH_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","ACCESSTOKEN","USER_LOGOUT","USER_UPLOAD_PROFILE","USER_UPLOAD_REQUEST","CLEAR_ERROR","USER_REQUEST","USER_VERIFY","REQUEST_FAIL","axios","SERVER","updateProfile","formUpdateData","dispatch","type","data","post","catch","err","payload","error","response","message","console","log","user","clearError","userLogin","LoginFormData","success","localStorage","setItem","accessToken","userRegister","RegisterFormData","userLogout","removeItem","sendProfileForm","userInfo","newUser"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_AUTH_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    ACCESSTOKEN,\r\n    USER_LOGOUT,\r\n    USER_UPLOAD_PROFILE,\r\n    USER_UPLOAD_REQUEST,\r\n    CLEAR_ERROR,\r\n    USER_REQUEST,\r\n    USER_VERIFY,\r\n    REQUEST_FAIL,\r\n} from \"./typeAuth\";\r\nimport axios from \"axios\";\r\nimport { SERVER } from \"../../component/MainPages/helpers/key\";\r\n\r\nexport const updateProfile = (formUpdateData) => async (dispatch) => {\r\n    dispatch({\r\n        type: USER_REQUEST,\r\n    });\r\n    const { data } = await axios\r\n        .post(`${SERVER}/user/upload?_method=put`, formUpdateData)\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: USER_AUTH_FAIL,\r\n                payload: {\r\n                    error:\r\n                        err.response.data.message ||\r\n                        \"Update your profile fail!!\",\r\n                },\r\n            })\r\n        );\r\n    console.log(data);\r\n    dispatch({\r\n        type: USER_UPLOAD_PROFILE,\r\n        payload: {\r\n            user: data.user,\r\n        },\r\n    });\r\n};\r\n\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERROR,\r\n    });\r\n};\r\n\r\nexport const userLogin = (LoginFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/login`,\r\n            LoginFormData\r\n        );\r\n\r\n        if (data.success) {\r\n            localStorage.setItem(ACCESSTOKEN, data.accessToken);\r\n        }\r\n\r\n        // await loadUser();\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message || \"Login is fail\",\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\nexport const userRegister = (RegisterFormData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/register`,\r\n            RegisterFormData\r\n        );\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n        });\r\n\r\n        return data;\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\nexport const userLogout = () => async (dispatch) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    localStorage.removeItem(ACCESSTOKEN);\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\nexport const sendProfileForm = (userInfo) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPLOAD_REQUEST,\r\n        });\r\n\r\n        const { data } = await axios.post(\r\n            `${SERVER}/user/save/profile`,\r\n            userInfo\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_UPLOAD_PROFILE,\r\n            payload: {\r\n                user: data.newUser,\r\n            },\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_AUTH_FAIL,\r\n            payload: {\r\n                error: err.response.data.message,\r\n            },\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\MainPages\\\\utils\\\\UploadImg\\\\UpImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./upImage.css\";\nimport { userContext } from \"../../../Context/userProvider\";\nimport { v4 as uuid4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpImage = () => {\n  _s();\n\n  // const [fileInputSate, setFileInputState] = React.useState(\"\");\n  // const [selectedFile, setSelectedFile] = React.useState(\"\");\n  const [previewSource, setPreviewSource] = useState(null);\n  const {\n    api: {\n      getCategory\n    }\n  } = useContext(userContext);\n  const [images, setImages] = useState({\n    main: null,\n    imgArr: []\n  });\n  const {\n    main,\n    imgArr\n  } = images; // const [mainImg, setmainImg] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [formValue, setFormValue] = useState({\n    name: \"\",\n    prize: \"\",\n    promo: \"\",\n    status: \"\",\n    categoryId: \"\"\n  });\n  const [category, setCategory] = useState([]); // console.log(formValue);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await getCategory();\n\n        if (res.success) {\n          setCategory(res.categories);\n          setFormValue({ ...formValue,\n            categoryId: res.categories[0]._id\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n\n  const handleFileInputChange = async e => {\n    // if (images) deleteImage(images.public_id);\n    try {\n      const file = e.target.files;\n      previewFile(file);\n      let ins = file.length;\n      let formData = new FormData();\n\n      for (let x = 0; x < ins; x++) {\n        formData.append(\"files\", file[x]);\n      } // if (!file) return alert(\"File is not exist\");\n      // if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\n      // if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\n      //     return alert(\"File format is incorrect\");\n      // formData.append(\"file\", file);\n      // =========================================================\n      // setLoading(true);\n      // const res = await axios.post(\n      //     \"http://localhost:5000/service/upload\",\n      //     formData,\n      //     {\n      //         headers: {\n      //             \"content-type\": \"multipart/form-data\",\n      //         },\n      //     }\n      // );\n      // console.log(res);\n      // setLoading(false);\n      // if (res.data.success)\n      //     setImages({\n      //         main: res.data.imgs[0],\n      //         imgArr: res.data.imgs,\n      //     });\n\n    } catch (err) {\n      console.log(err);\n    } // previewFile(file);\n\n  };\n\n  const deleteImage = async () => {\n    setLoading(true);\n    const res = await axios.post(\"http://localhost:5000/service/destroy\", {\n      public_id: images.public_id\n    });\n    console.log(res);\n    setLoading(false);\n    setImages({\n      main: null,\n      imgArr: []\n    });\n  };\n\n  const handleInput = e => {\n    const text = e.target.value;\n    setFormValue({ ...formValue,\n      [e.target.name]: text\n    });\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const data = { ...formValue,\n      images: imgArr\n    };\n  };\n\n  let imgStyle = images.imgArr.length ? {\n    display: \"block\"\n  } : {\n    display: \"none\"\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  console.log(previewSource); // const handleSubmitFile = (e) => {\n  //     e.preventDefault();\n  //     if (!previewSource) return;\n  //     uploadImage(previewSource);\n  // };\n  // const uploadImage = async (base64EncodedImage) => {\n  //     console.log(base64EncodedImage);\n  //     try {\n  //         await axios('http://localhost:5000/api/upload', )\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n\n  console.log(images);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upimg l-4 px-4 flex-fill\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group img-upload h-100 position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"img\",\n            className: imgArr.length ? \"d-none\" : `l-12\n                            w-100 h-100 border \n                            border-info d-flex \n                            justify-content-center \n                            align-items-center \n                            cursor-pointer`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus fs-1 text-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"d-none\",\n            type: \"file\",\n            multiple: true,\n            name: \"file\",\n            id: \"img\",\n            onChange: previewFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: imgStyle,\n            src: imgArr.length ? main.url : \"\",\n            alt: \"choosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), main && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-times-circle img-close cursor-pointer text-danger\",\n            onClick: deleteImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-img d-flex justify-content-between mt-4\",\n            children: imgArr.length !== 0 && imgArr.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-img-item cursor-pointer\",\n              style: {\n                backgroundImage: `url('${item.url}')`\n              }\n            }, uuid4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrap l-8 ps-2 pe-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"form-products\",\n          className: \"form-products\",\n          onSubmit: handleSubmitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              value: formValue.name,\n              onChange: handleInput,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"prize\",\n              children: \"Product Prize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"prize\",\n              id: \"prize\",\n              value: formValue.prize,\n              onChange: handleInput,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-control-product\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"promo\",\n              children: \"Product Promotion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"promo\",\n              value: formValue.promo,\n              onChange: handleInput,\n              id: \"promo\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sel\",\n              children: \"Product Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              id: \"sel\",\n              onChange: handleInput,\n              value: formValue.categoryId,\n              name: \"categoryId\",\n              children: category.length && category.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item._id,\n                children: item.name\n              }, uuid4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100 mt-4\",\n            children: \"\\u0110\\u0103ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpImage, \"2YdYIEOAtjzJOXMixaacI56znRM=\");\n\n_c = UpImage;\nexport default UpImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpImage\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/MainPages/utils/UploadImg/UpImage.js"],"names":["React","useState","useContext","useEffect","axios","userContext","v4","uuid4","UpImage","previewSource","setPreviewSource","api","getCategory","images","setImages","main","imgArr","loading","setLoading","formValue","setFormValue","name","prize","promo","status","categoryId","category","setCategory","res","success","categories","_id","err","console","log","handleFileInputChange","e","file","target","files","previewFile","ins","length","formData","FormData","x","append","deleteImage","post","public_id","handleInput","text","value","handleSubmitForm","preventDefault","data","imgStyle","display","reader","FileReader","readAsDataURL","onloadend","result","url","map","item","backgroundImage","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./upImage.css\";\r\nimport { userContext } from \"../../../Context/userProvider\";\r\nimport { v4 as uuid4 } from \"uuid\";\r\n\r\nconst UpImage = () => {\r\n    // const [fileInputSate, setFileInputState] = React.useState(\"\");\r\n    // const [selectedFile, setSelectedFile] = React.useState(\"\");\r\n    const [previewSource, setPreviewSource] = useState(null);\r\n\r\n    const {\r\n        api: { getCategory },\r\n    } = useContext(userContext);\r\n    const [images, setImages] = useState({\r\n        main: null,\r\n        imgArr: [],\r\n    });\r\n    const { main, imgArr } = images;\r\n    // const [mainImg, setmainImg] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [formValue, setFormValue] = useState({\r\n        name: \"\",\r\n        prize: \"\",\r\n        promo: \"\",\r\n        status: \"\",\r\n        categoryId: \"\",\r\n    });\r\n    const [category, setCategory] = useState([]);\r\n    // console.log(formValue);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const res = await getCategory();\r\n                if (res.success) {\r\n                    setCategory(res.categories);\r\n                    setFormValue({\r\n                        ...formValue,\r\n                        categoryId: res.categories[0]._id,\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const handleFileInputChange = async (e) => {\r\n        // if (images) deleteImage(images.public_id);\r\n\r\n        try {\r\n            const file = e.target.files;\r\n            previewFile(file);\r\n            let ins = file.length;\r\n            let formData = new FormData();\r\n\r\n            for (let x = 0; x < ins; x++) {\r\n                formData.append(\"files\", file[x]);\r\n            }\r\n            // if (!file) return alert(\"File is not exist\");\r\n            // if (file.size > 1024 * 1024) return alert(\"Size too large!!\");\r\n            // if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\r\n            //     return alert(\"File format is incorrect\");\r\n            // formData.append(\"file\", file);\r\n            // =========================================================\r\n            // setLoading(true);\r\n            // const res = await axios.post(\r\n            //     \"http://localhost:5000/service/upload\",\r\n            //     formData,\r\n            //     {\r\n            //         headers: {\r\n            //             \"content-type\": \"multipart/form-data\",\r\n            //         },\r\n            //     }\r\n            // );\r\n            // console.log(res);\r\n            // setLoading(false);\r\n            // if (res.data.success)\r\n            //     setImages({\r\n            //         main: res.data.imgs[0],\r\n            //         imgArr: res.data.imgs,\r\n            //     });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        // previewFile(file);\r\n    };\r\n    const deleteImage = async () => {\r\n        setLoading(true);\r\n        const res = await axios.post(\"http://localhost:5000/service/destroy\", {\r\n            public_id: images.public_id,\r\n        });\r\n        console.log(res);\r\n        setLoading(false);\r\n        setImages({\r\n            main: null,\r\n            imgArr: [],\r\n        });\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const text = e.target.value;\r\n        setFormValue({ ...formValue, [e.target.name]: text });\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const data = { ...formValue, images: imgArr };\r\n    };\r\n\r\n    let imgStyle = images.imgArr.length\r\n        ? { display: \"block\" }\r\n        : { display: \"none\" };\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        };\r\n    };\r\n    console.log(previewSource);\r\n\r\n    // const handleSubmitFile = (e) => {\r\n    //     e.preventDefault();\r\n    //     if (!previewSource) return;\r\n    //     uploadImage(previewSource);\r\n    // };\r\n\r\n    // const uploadImage = async (base64EncodedImage) => {\r\n    //     console.log(base64EncodedImage);\r\n    //     try {\r\n    //         await axios('http://localhost:5000/api/upload', )\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // };\r\n    console.log(images);\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\">Upload</h1>\r\n            <div className=\"main d-flex\">\r\n                <div className=\"upimg l-4 px-4 flex-fill\">\r\n                    <div className=\"form-group img-upload h-100 position-relative\">\r\n                        <label\r\n                            htmlFor=\"img\"\r\n                            className={\r\n                                imgArr.length\r\n                                    ? \"d-none\"\r\n                                    : `l-12\r\n                            w-100 h-100 border \r\n                            border-info d-flex \r\n                            justify-content-center \r\n                            align-items-center \r\n                            cursor-pointer`\r\n                            }\r\n                        >\r\n                            <i className=\"fas fa-plus fs-1 text-warning\"></i>\r\n                        </label>\r\n                        <input\r\n                            className=\"d-none\"\r\n                            type=\"file\"\r\n                            multiple\r\n                            name=\"file\"\r\n                            id=\"img\"\r\n                            onChange={previewFile}\r\n                        />\r\n                        <img\r\n                            style={imgStyle}\r\n                            src={imgArr.length ? main.url : \"\"}\r\n                            alt=\"choosen\"\r\n                        />\r\n                        {main && (\r\n                            <i\r\n                                className=\"far fa-times-circle img-close cursor-pointer text-danger\"\r\n                                onClick={deleteImage}\r\n                            ></i>\r\n                        )}\r\n                        <div className=\"list-img d-flex justify-content-between mt-4\">\r\n                            {imgArr.length !== 0 &&\r\n                                imgArr.map((item) => (\r\n                                    <div\r\n                                        key={uuid4()}\r\n                                        className=\"list-img-item cursor-pointer\"\r\n                                        style={{\r\n                                            backgroundImage: `url('${item.url}')`,\r\n                                        }}\r\n                                    ></div>\r\n                                ))}\r\n                            {/* <div className=\"list-img-item border\"></div>\r\n                            <div className=\"list-img-item border\"></div>\r\n                            <div className=\"list-img-item border\"></div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-wrap l-8 ps-2 pe-4\">\r\n                    <form\r\n                        name=\"form-products\"\r\n                        className=\"form-products\"\r\n                        onSubmit={handleSubmitForm}\r\n                    >\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"name\">Product Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                value={formValue.name}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"prize\">Product Prize</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"prize\"\r\n                                id=\"prize\"\r\n                                value={formValue.prize}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"promo\">Product Promotion</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"promo\"\r\n                                value={formValue.promo}\r\n                                onChange={handleInput}\r\n                                id=\"promo\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"form-group form-control-product\">\r\n                            <label htmlFor=\"status\">Product Status</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"status\"\r\n                                id=\"status\"\r\n                                value={formValue.status}\r\n                                onChange={handleInput}\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div> */}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"sel\">Product Category</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                id=\"sel\"\r\n                                onChange={handleInput}\r\n                                value={formValue.categoryId}\r\n                                name=\"categoryId\"\r\n                            >\r\n                                {category.length &&\r\n                                    category.map((item, index) => (\r\n                                        <option key={uuid4()} value={item._id}>\r\n                                            {item.name}\r\n                                        </option>\r\n                                    ))}\r\n                                {/* <option value=\"1\">Quần áo</option>\r\n                                <option value=\"2\">Giày dép</option>\r\n                                <option value=\"3\">Phụ kiện</option> */}\r\n                            </select>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary w-100 mt-4\"\r\n                        >\r\n                            Đăng\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpImage;\r\n"]},"metadata":{},"sourceType":"module"}
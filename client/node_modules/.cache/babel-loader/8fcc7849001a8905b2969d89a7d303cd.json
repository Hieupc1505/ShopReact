{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\MainPages\\\\Form\\\\ResetPass.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport bkg from \"../../../public/img/background.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPass = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user,\n    isLoad,\n    isAuth\n  } = useSelector(state => state.userAuth);\n  const [check, setCheck] = useState(true);\n  const [ipVal, setIpVal] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleInputChange = e => {\n    const text = e.target.value;\n    setIpVal({ ...ipVal,\n      [e.target.name]: text\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: bkg,\n      alt: \"background\",\n      width: \"1200px\",\n      className: \"app-bkg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), check && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-fill-email\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-email\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Vui l\\xF2ng nh\\u1EADp email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Nh\\u1EADp email\",\n          onChange: handleInputChange,\n          val: ipVal.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary\",\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPass, \"CtlUlJF34AbwPV4Ajlu3qyYiY7U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ResetPass;\nexport default ResetPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPass\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/MainPages/Form/ResetPass.js"],"names":["React","useState","bkg","useDispatch","useSelector","ResetPass","dispatch","user","isLoad","isAuth","state","userAuth","check","setCheck","ipVal","setIpVal","email","password","handleInputChange","e","text","target","value","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA2BL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAC/Be,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAKA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACK,CAAC,CAACE,MAAF,CAASE,IAAV,GAAiBH;AAA7B,KAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AACI,MAAA,GAAG,EAAElB,GADT;AAEI,MAAA,GAAG,EAAC,YAFR;AAGI,MAAA,KAAK,EAAC,QAHV;AAII,MAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKU,KAAK,iBACF;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,iBAHhB;AAII,UAAA,QAAQ,EAAEM,iBAJd;AAKI,UAAA,GAAG,EAAEJ,KAAK,CAACE;AALf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAtCD;;GAAMX,S;UACeF,W,EACgBC,W;;;KAF/BC,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport bkg from \"../../../public/img/background.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ResetPass = () => {\r\n    const dispatch = useDispatch();\r\n    const { user, isLoad, isAuth } = useSelector((state) => state.userAuth);\r\n    const [check, setCheck] = useState(true);\r\n    const [ipVal, setIpVal] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        const text = e.target.value;\r\n        setIpVal({ ...ipVal, [e.target.name]: text });\r\n    };\r\n    return (\r\n        <div className=\"app-main\">\r\n            <img\r\n                src={bkg}\r\n                alt=\"background\"\r\n                width=\"1200px\"\r\n                className=\"app-bkg\"\r\n            />\r\n            {check && (\r\n                <div className=\"form-fill-email\">\r\n                    <form className=\"add-email\">\r\n                        <label for=\"email\">Vui lòng nhập email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Nhập email\"\r\n                            onChange={handleInputChange}\r\n                            val={ipVal.email}\r\n                        />\r\n                        <div className=\"btn btn-primary\">Gửi</div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPass;\r\n"]},"metadata":{},"sourceType":"module"}
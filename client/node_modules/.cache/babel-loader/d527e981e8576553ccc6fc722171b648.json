{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ShopFull\\\\client\\\\src\\\\component\\\\ProtectdRouteAdmin\\\\ProtectedRouteAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NotFound from \"../MainPages/utils/NotFound/NotFound\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRouteAdmin = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.userAuth);\n  const role = user ? user.role : 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [role === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YOu are not Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 28\n    }, this), role === 1 && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      component: Component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true); // if (user.role === 0) return <NotFound />;\n  // return (\n  //     <>\n  //         <Route {...props} component={Component} />\n  //     </>\n  // );\n};\n\n_s(ProtectedRouteAdmin, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRouteAdmin;\nexport default ProtectedRouteAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRouteAdmin\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ShopFull/client/src/component/ProtectdRouteAdmin/ProtectedRouteAdmin.js"],"names":["React","Route","NotFound","useSelector","ProtectedRouteAdmin","component","Component","rest","user","state","userAuth","role"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B;AAEA,QAAMC,IAAI,GAAGH,IAAI,GAAGA,IAAI,CAACG,IAAR,GAAe,CAAhC;AACA,sBACI;AAAA,eACKA,IAAI,KAAK,CAAT,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKA,IAAI,KAAK,CAAT,iBAAc,QAAC,KAAD,OAAWJ,IAAX;AAAiB,MAAA,SAAS,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFnB;AAAA,kBADJ,CAJ+D,CAU/D;AAEA;AACA;AACA;AACA;AACA;AACH,CAjBD;;GAAMF,mB;UACeD,W;;;KADfC,mB;AAmBN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport NotFound from \"../MainPages/utils/NotFound/NotFound\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectedRouteAdmin = ({ component: Component, ...rest }) => {\r\n    const { user } = useSelector((state) => state.userAuth);\r\n\r\n    const role = user ? user.role : 0;\r\n    return (\r\n        <>\r\n            {role === 0 && <h1>YOu are not Admin</h1>}\r\n            {role === 1 && <Route {...rest} component={Component} />}\r\n        </>\r\n    );\r\n    // if (user.role === 0) return <NotFound />;\r\n\r\n    // return (\r\n    //     <>\r\n    //         <Route {...props} component={Component} />\r\n    //     </>\r\n    // );\r\n};\r\n\r\nexport default ProtectedRouteAdmin;\r\n"]},"metadata":{},"sourceType":"module"}